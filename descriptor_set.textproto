file {
  name: "google/protobuf/descriptor.proto"
  package: "google.protobuf"
  message_type {
    name: "FileDescriptorSet"
    field {
      name: "file"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.FileDescriptorProto"
      json_name: "file"
    }
  }
  message_type {
    name: "FileDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "package"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "package"
    }
    field {
      name: "dependency"
      number: 3
      label: LABEL_REPEATED
      type: TYPE_STRING
      json_name: "dependency"
    }
    field {
      name: "public_dependency"
      number: 10
      label: LABEL_REPEATED
      type: TYPE_INT32
      json_name: "publicDependency"
    }
    field {
      name: "weak_dependency"
      number: 11
      label: LABEL_REPEATED
      type: TYPE_INT32
      json_name: "weakDependency"
    }
    field {
      name: "message_type"
      number: 4
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.DescriptorProto"
      json_name: "messageType"
    }
    field {
      name: "enum_type"
      number: 5
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.EnumDescriptorProto"
      json_name: "enumType"
    }
    field {
      name: "service"
      number: 6
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.ServiceDescriptorProto"
      json_name: "service"
    }
    field {
      name: "extension"
      number: 7
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.FieldDescriptorProto"
      json_name: "extension"
    }
    field {
      name: "options"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.FileOptions"
      json_name: "options"
    }
    field {
      name: "source_code_info"
      number: 9
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.SourceCodeInfo"
      json_name: "sourceCodeInfo"
    }
    field {
      name: "syntax"
      number: 12
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "syntax"
    }
  }
  message_type {
    name: "DescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "field"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.FieldDescriptorProto"
      json_name: "field"
    }
    field {
      name: "extension"
      number: 6
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.FieldDescriptorProto"
      json_name: "extension"
    }
    field {
      name: "nested_type"
      number: 3
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.DescriptorProto"
      json_name: "nestedType"
    }
    field {
      name: "enum_type"
      number: 4
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.EnumDescriptorProto"
      json_name: "enumType"
    }
    field {
      name: "extension_range"
      number: 5
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.DescriptorProto.ExtensionRange"
      json_name: "extensionRange"
    }
    field {
      name: "oneof_decl"
      number: 8
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.OneofDescriptorProto"
      json_name: "oneofDecl"
    }
    field {
      name: "options"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.MessageOptions"
      json_name: "options"
    }
    field {
      name: "reserved_range"
      number: 9
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.DescriptorProto.ReservedRange"
      json_name: "reservedRange"
    }
    field {
      name: "reserved_name"
      number: 10
      label: LABEL_REPEATED
      type: TYPE_STRING
      json_name: "reservedName"
    }
    nested_type {
      name: "ExtensionRange"
      field {
        name: "start"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "start"
      }
      field {
        name: "end"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "end"
      }
      field {
        name: "options"
        number: 3
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".google.protobuf.ExtensionRangeOptions"
        json_name: "options"
      }
    }
    nested_type {
      name: "ReservedRange"
      field {
        name: "start"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "start"
      }
      field {
        name: "end"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "end"
      }
    }
  }
  message_type {
    name: "ExtensionRangeOptions"
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
  }
  message_type {
    name: "FieldDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "number"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "number"
    }
    field {
      name: "label"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.FieldDescriptorProto.Label"
      json_name: "label"
    }
    field {
      name: "type"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.FieldDescriptorProto.Type"
      json_name: "type"
    }
    field {
      name: "type_name"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "typeName"
    }
    field {
      name: "extendee"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "extendee"
    }
    field {
      name: "default_value"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "defaultValue"
    }
    field {
      name: "oneof_index"
      number: 9
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "oneofIndex"
    }
    field {
      name: "json_name"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "jsonName"
    }
    field {
      name: "options"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.FieldOptions"
      json_name: "options"
    }
    enum_type {
      name: "Type"
      value {
        name: "TYPE_DOUBLE"
        number: 1
      }
      value {
        name: "TYPE_FLOAT"
        number: 2
      }
      value {
        name: "TYPE_INT64"
        number: 3
      }
      value {
        name: "TYPE_UINT64"
        number: 4
      }
      value {
        name: "TYPE_INT32"
        number: 5
      }
      value {
        name: "TYPE_FIXED64"
        number: 6
      }
      value {
        name: "TYPE_FIXED32"
        number: 7
      }
      value {
        name: "TYPE_BOOL"
        number: 8
      }
      value {
        name: "TYPE_STRING"
        number: 9
      }
      value {
        name: "TYPE_GROUP"
        number: 10
      }
      value {
        name: "TYPE_MESSAGE"
        number: 11
      }
      value {
        name: "TYPE_BYTES"
        number: 12
      }
      value {
        name: "TYPE_UINT32"
        number: 13
      }
      value {
        name: "TYPE_ENUM"
        number: 14
      }
      value {
        name: "TYPE_SFIXED32"
        number: 15
      }
      value {
        name: "TYPE_SFIXED64"
        number: 16
      }
      value {
        name: "TYPE_SINT32"
        number: 17
      }
      value {
        name: "TYPE_SINT64"
        number: 18
      }
    }
    enum_type {
      name: "Label"
      value {
        name: "LABEL_OPTIONAL"
        number: 1
      }
      value {
        name: "LABEL_REQUIRED"
        number: 2
      }
      value {
        name: "LABEL_REPEATED"
        number: 3
      }
    }
  }
  message_type {
    name: "OneofDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "options"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.OneofOptions"
      json_name: "options"
    }
  }
  message_type {
    name: "EnumDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "value"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.EnumValueDescriptorProto"
      json_name: "value"
    }
    field {
      name: "options"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.EnumOptions"
      json_name: "options"
    }
    field {
      name: "reserved_range"
      number: 4
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.EnumDescriptorProto.EnumReservedRange"
      json_name: "reservedRange"
    }
    field {
      name: "reserved_name"
      number: 5
      label: LABEL_REPEATED
      type: TYPE_STRING
      json_name: "reservedName"
    }
    nested_type {
      name: "EnumReservedRange"
      field {
        name: "start"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "start"
      }
      field {
        name: "end"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "end"
      }
    }
  }
  message_type {
    name: "EnumValueDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "number"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "number"
    }
    field {
      name: "options"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.EnumValueOptions"
      json_name: "options"
    }
  }
  message_type {
    name: "ServiceDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "method"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.MethodDescriptorProto"
      json_name: "method"
    }
    field {
      name: "options"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.ServiceOptions"
      json_name: "options"
    }
  }
  message_type {
    name: "MethodDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "input_type"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "inputType"
    }
    field {
      name: "output_type"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "outputType"
    }
    field {
      name: "options"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.MethodOptions"
      json_name: "options"
    }
    field {
      name: "client_streaming"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "clientStreaming"
    }
    field {
      name: "server_streaming"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "serverStreaming"
    }
  }
  message_type {
    name: "FileOptions"
    field {
      name: "java_package"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "javaPackage"
    }
    field {
      name: "java_outer_classname"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "javaOuterClassname"
    }
    field {
      name: "java_multiple_files"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "javaMultipleFiles"
    }
    field {
      name: "java_generate_equals_and_hash"
      number: 20
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        deprecated: true
      }
      json_name: "javaGenerateEqualsAndHash"
    }
    field {
      name: "java_string_check_utf8"
      number: 27
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "javaStringCheckUtf8"
    }
    field {
      name: "optimize_for"
      number: 9
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.FileOptions.OptimizeMode"
      default_value: "SPEED"
      json_name: "optimizeFor"
    }
    field {
      name: "go_package"
      number: 11
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "goPackage"
    }
    field {
      name: "cc_generic_services"
      number: 16
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "ccGenericServices"
    }
    field {
      name: "java_generic_services"
      number: 17
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "javaGenericServices"
    }
    field {
      name: "py_generic_services"
      number: 18
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "pyGenericServices"
    }
    field {
      name: "php_generic_services"
      number: 42
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "phpGenericServices"
    }
    field {
      name: "deprecated"
      number: 23
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "cc_enable_arenas"
      number: 31
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "ccEnableArenas"
    }
    field {
      name: "objc_class_prefix"
      number: 36
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "objcClassPrefix"
    }
    field {
      name: "csharp_namespace"
      number: 37
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "csharpNamespace"
    }
    field {
      name: "swift_prefix"
      number: 39
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "swiftPrefix"
    }
    field {
      name: "php_class_prefix"
      number: 40
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "phpClassPrefix"
    }
    field {
      name: "php_namespace"
      number: 41
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "phpNamespace"
    }
    field {
      name: "php_metadata_namespace"
      number: 44
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "phpMetadataNamespace"
    }
    field {
      name: "ruby_package"
      number: 45
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "rubyPackage"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    enum_type {
      name: "OptimizeMode"
      value {
        name: "SPEED"
        number: 1
      }
      value {
        name: "CODE_SIZE"
        number: 2
      }
      value {
        name: "LITE_RUNTIME"
        number: 3
      }
    }
    extension_range {
      start: 1000
      end: 536870912
    }
    reserved_range {
      start: 38
      end: 39
    }
  }
  message_type {
    name: "MessageOptions"
    field {
      name: "message_set_wire_format"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "messageSetWireFormat"
    }
    field {
      name: "no_standard_descriptor_accessor"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "noStandardDescriptorAccessor"
    }
    field {
      name: "deprecated"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "map_entry"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "mapEntry"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
    reserved_range {
      start: 8
      end: 9
    }
    reserved_range {
      start: 9
      end: 10
    }
  }
  message_type {
    name: "FieldOptions"
    field {
      name: "ctype"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.FieldOptions.CType"
      default_value: "STRING"
      json_name: "ctype"
    }
    field {
      name: "packed"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "packed"
    }
    field {
      name: "jstype"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.FieldOptions.JSType"
      default_value: "JS_NORMAL"
      json_name: "jstype"
    }
    field {
      name: "lazy"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "lazy"
    }
    field {
      name: "deprecated"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "weak"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "weak"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    enum_type {
      name: "CType"
      value {
        name: "STRING"
        number: 0
      }
      value {
        name: "CORD"
        number: 1
      }
      value {
        name: "STRING_PIECE"
        number: 2
      }
    }
    enum_type {
      name: "JSType"
      value {
        name: "JS_NORMAL"
        number: 0
      }
      value {
        name: "JS_STRING"
        number: 1
      }
      value {
        name: "JS_NUMBER"
        number: 2
      }
    }
    extension_range {
      start: 1000
      end: 536870912
    }
    reserved_range {
      start: 4
      end: 5
    }
  }
  message_type {
    name: "OneofOptions"
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
  }
  message_type {
    name: "EnumOptions"
    field {
      name: "allow_alias"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "allowAlias"
    }
    field {
      name: "deprecated"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
    reserved_range {
      start: 5
      end: 6
    }
  }
  message_type {
    name: "EnumValueOptions"
    field {
      name: "deprecated"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
  }
  message_type {
    name: "ServiceOptions"
    field {
      name: "deprecated"
      number: 33
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
  }
  message_type {
    name: "MethodOptions"
    field {
      name: "deprecated"
      number: 33
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "idempotency_level"
      number: 34
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.MethodOptions.IdempotencyLevel"
      default_value: "IDEMPOTENCY_UNKNOWN"
      json_name: "idempotencyLevel"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    enum_type {
      name: "IdempotencyLevel"
      value {
        name: "IDEMPOTENCY_UNKNOWN"
        number: 0
      }
      value {
        name: "NO_SIDE_EFFECTS"
        number: 1
      }
      value {
        name: "IDEMPOTENT"
        number: 2
      }
    }
    extension_range {
      start: 1000
      end: 536870912
    }
  }
  message_type {
    name: "UninterpretedOption"
    field {
      name: "name"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption.NamePart"
      json_name: "name"
    }
    field {
      name: "identifier_value"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "identifierValue"
    }
    field {
      name: "positive_int_value"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_UINT64
      json_name: "positiveIntValue"
    }
    field {
      name: "negative_int_value"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_INT64
      json_name: "negativeIntValue"
    }
    field {
      name: "double_value"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      json_name: "doubleValue"
    }
    field {
      name: "string_value"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "stringValue"
    }
    field {
      name: "aggregate_value"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "aggregateValue"
    }
    nested_type {
      name: "NamePart"
      field {
        name: "name_part"
        number: 1
        label: LABEL_REQUIRED
        type: TYPE_STRING
        json_name: "namePart"
      }
      field {
        name: "is_extension"
        number: 2
        label: LABEL_REQUIRED
        type: TYPE_BOOL
        json_name: "isExtension"
      }
    }
  }
  message_type {
    name: "SourceCodeInfo"
    field {
      name: "location"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.SourceCodeInfo.Location"
      json_name: "location"
    }
    nested_type {
      name: "Location"
      field {
        name: "path"
        number: 1
        label: LABEL_REPEATED
        type: TYPE_INT32
        options {
          packed: true
        }
        json_name: "path"
      }
      field {
        name: "span"
        number: 2
        label: LABEL_REPEATED
        type: TYPE_INT32
        options {
          packed: true
        }
        json_name: "span"
      }
      field {
        name: "leading_comments"
        number: 3
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "leadingComments"
      }
      field {
        name: "trailing_comments"
        number: 4
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "trailingComments"
      }
      field {
        name: "leading_detached_comments"
        number: 6
        label: LABEL_REPEATED
        type: TYPE_STRING
        json_name: "leadingDetachedComments"
      }
    }
  }
  message_type {
    name: "GeneratedCodeInfo"
    field {
      name: "annotation"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.GeneratedCodeInfo.Annotation"
      json_name: "annotation"
    }
    nested_type {
      name: "Annotation"
      field {
        name: "path"
        number: 1
        label: LABEL_REPEATED
        type: TYPE_INT32
        options {
          packed: true
        }
        json_name: "path"
      }
      field {
        name: "source_file"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "sourceFile"
      }
      field {
        name: "begin"
        number: 3
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "begin"
      }
      field {
        name: "end"
        number: 4
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "end"
      }
    }
  }
  options {
    java_package: "com.google.protobuf"
    java_outer_classname: "DescriptorProtos"
    optimize_for: SPEED
    go_package: "github.com/golang/protobuf/protoc-gen-go/descriptor;descriptor"
    cc_enable_arenas: true
    objc_class_prefix: "GPB"
    csharp_namespace: "Google.Protobuf.Reflection"
  }
  source_code_info {
    location {
      span: 39
      span: 0
      span: 884
      span: 1
    }
    location {
      path: 12
      span: 39
      span: 0
      span: 18
      leading_detached_comments: " Protocol Buffers - Google\'s data interchange format\n Copyright 2008 Google Inc.  All rights reserved.\n https://developers.google.com/protocol-buffers/\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      leading_detached_comments: " Author: kenton@google.com (Kenton Varda)\n  Based on original Protocol Buffers design by\n  Sanjay Ghemawat, Jeff Dean, and others.\n\n The messages in this file describe the definitions found in .proto files.\n A valid .proto file can be translated directly to a FileDescriptorProto\n without any other information (e.g. without reading its imports).\n"
    }
    location {
      path: 2
      span: 41
      span: 0
      span: 24
    }
    location {
      path: 8
      span: 43
      span: 0
      span: 85
    }
    location {
      path: 8
      path: 11
      span: 43
      span: 0
      span: 85
    }
    location {
      path: 8
      span: 44
      span: 0
      span: 44
    }
    location {
      path: 8
      path: 1
      span: 44
      span: 0
      span: 44
    }
    location {
      path: 8
      span: 45
      span: 0
      span: 49
    }
    location {
      path: 8
      path: 8
      span: 45
      span: 0
      span: 49
    }
    location {
      path: 8
      span: 46
      span: 0
      span: 55
    }
    location {
      path: 8
      path: 37
      span: 46
      span: 0
      span: 55
    }
    location {
      path: 8
      span: 47
      span: 0
      span: 33
    }
    location {
      path: 8
      path: 36
      span: 47
      span: 0
      span: 33
    }
    location {
      path: 8
      span: 48
      span: 0
      span: 31
    }
    location {
      path: 8
      path: 31
      span: 48
      span: 0
      span: 31
    }
    location {
      path: 8
      span: 52
      span: 0
      span: 28
    }
    location {
      path: 8
      path: 9
      span: 52
      span: 0
      span: 28
      leading_comments: " descriptor.proto must be optimized for speed because reflection-based\n algorithms don\'t work during bootstrapping.\n"
    }
    location {
      path: 4
      path: 0
      span: 56
      span: 0
      span: 58
      span: 1
      leading_comments: " The protocol compiler can output a FileDescriptorSet containing the .proto\n files it parses.\n"
    }
    location {
      path: 4
      path: 0
      path: 1
      span: 56
      span: 8
      span: 25
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      span: 57
      span: 2
      span: 40
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 4
      span: 57
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 6
      span: 57
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 1
      span: 57
      span: 31
      span: 35
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 3
      span: 57
      span: 38
      span: 39
    }
    location {
      path: 4
      path: 1
      span: 61
      span: 0
      span: 90
      span: 1
      leading_comments: " Describes a complete .proto file.\n"
    }
    location {
      path: 4
      path: 1
      path: 1
      span: 61
      span: 8
      span: 27
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      span: 62
      span: 2
      span: 27
      trailing_comments: " file name, relative to root of source tree\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 4
      span: 62
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 5
      span: 62
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 1
      span: 62
      span: 18
      span: 22
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 0
      path: 3
      span: 62
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      span: 63
      span: 2
      span: 30
      trailing_comments: " e.g. \"foo\", \"foo.bar\", etc.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 4
      span: 63
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 5
      span: 63
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 1
      span: 63
      span: 18
      span: 25
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 1
      path: 3
      span: 63
      span: 28
      span: 29
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      span: 66
      span: 2
      span: 33
      leading_comments: " Names of files imported by this file.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 4
      span: 66
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 5
      span: 66
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 1
      span: 66
      span: 18
      span: 28
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 2
      path: 3
      span: 66
      span: 31
      span: 32
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 3
      span: 68
      span: 2
      span: 40
      leading_comments: " Indexes of the public imported files in the dependency list above.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 3
      path: 4
      span: 68
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 3
      path: 5
      span: 68
      span: 11
      span: 16
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 3
      path: 1
      span: 68
      span: 17
      span: 34
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 3
      path: 3
      span: 68
      span: 37
      span: 39
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 4
      span: 71
      span: 2
      span: 38
      leading_comments: " Indexes of the weak imported files in the dependency list.\n For Google-internal migration only. Do not use.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 4
      path: 4
      span: 71
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 4
      path: 5
      span: 71
      span: 11
      span: 16
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 4
      path: 1
      span: 71
      span: 17
      span: 32
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 4
      path: 3
      span: 71
      span: 35
      span: 37
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 5
      span: 74
      span: 2
      span: 44
      leading_comments: " All top-level definitions in this file.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 5
      path: 4
      span: 74
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 5
      path: 6
      span: 74
      span: 11
      span: 26
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 5
      path: 1
      span: 74
      span: 27
      span: 39
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 5
      path: 3
      span: 74
      span: 42
      span: 43
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 6
      span: 75
      span: 2
      span: 45
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 6
      path: 4
      span: 75
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 6
      path: 6
      span: 75
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 6
      path: 1
      span: 75
      span: 31
      span: 40
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 6
      path: 3
      span: 75
      span: 43
      span: 44
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 7
      span: 76
      span: 2
      span: 46
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 7
      path: 4
      span: 76
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 7
      path: 6
      span: 76
      span: 11
      span: 33
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 7
      path: 1
      span: 76
      span: 34
      span: 41
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 7
      path: 3
      span: 76
      span: 44
      span: 45
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 8
      span: 77
      span: 2
      span: 46
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 8
      path: 4
      span: 77
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 8
      path: 6
      span: 77
      span: 11
      span: 31
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 8
      path: 1
      span: 77
      span: 32
      span: 41
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 8
      path: 3
      span: 77
      span: 44
      span: 45
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 9
      span: 79
      span: 2
      span: 35
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 9
      path: 4
      span: 79
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 9
      path: 6
      span: 79
      span: 11
      span: 22
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 9
      path: 1
      span: 79
      span: 23
      span: 30
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 9
      path: 3
      span: 79
      span: 33
      span: 34
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 10
      span: 85
      span: 2
      span: 47
      leading_comments: " This field contains optional information about the original source code.\n You may safely remove this entire field without harming runtime\n functionality of the descriptors -- the information is needed only by\n development tools.\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 10
      path: 4
      span: 85
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 10
      path: 6
      span: 85
      span: 11
      span: 25
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 10
      path: 1
      span: 85
      span: 26
      span: 42
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 10
      path: 3
      span: 85
      span: 45
      span: 46
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 11
      span: 89
      span: 2
      span: 30
      leading_comments: " The syntax of the proto file.\n The supported values are \"proto2\" and \"proto3\".\n"
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 11
      path: 4
      span: 89
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 11
      path: 5
      span: 89
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 11
      path: 1
      span: 89
      span: 18
      span: 24
    }
    location {
      path: 4
      path: 1
      path: 2
      path: 11
      path: 3
      span: 89
      span: 27
      span: 29
    }
    location {
      path: 4
      path: 2
      span: 93
      span: 0
      span: 125
      span: 1
      leading_comments: " Describes a message type.\n"
    }
    location {
      path: 4
      path: 2
      path: 1
      span: 93
      span: 8
      span: 23
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      span: 94
      span: 2
      span: 27
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      path: 4
      span: 94
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      path: 5
      span: 94
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      path: 1
      span: 94
      span: 18
      span: 22
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 0
      path: 3
      span: 94
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 1
      span: 96
      span: 2
      span: 42
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 1
      path: 4
      span: 96
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 1
      path: 6
      span: 96
      span: 11
      span: 31
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 1
      path: 1
      span: 96
      span: 32
      span: 37
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 1
      path: 3
      span: 96
      span: 40
      span: 41
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 2
      span: 97
      span: 2
      span: 46
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 2
      path: 4
      span: 97
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 2
      path: 6
      span: 97
      span: 11
      span: 31
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 2
      path: 1
      span: 97
      span: 32
      span: 41
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 2
      path: 3
      span: 97
      span: 44
      span: 45
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 3
      span: 99
      span: 2
      span: 43
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 3
      path: 4
      span: 99
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 3
      path: 6
      span: 99
      span: 11
      span: 26
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 3
      path: 1
      span: 99
      span: 27
      span: 38
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 3
      path: 3
      span: 99
      span: 41
      span: 42
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 4
      span: 100
      span: 2
      span: 45
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 4
      path: 4
      span: 100
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 4
      path: 6
      span: 100
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 4
      path: 1
      span: 100
      span: 31
      span: 40
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 4
      path: 3
      span: 100
      span: 43
      span: 44
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      span: 102
      span: 2
      span: 107
      span: 3
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 1
      span: 102
      span: 10
      span: 24
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 0
      span: 103
      span: 4
      span: 29
      trailing_comments: " Inclusive.\n"
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 0
      path: 4
      span: 103
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 0
      path: 5
      span: 103
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 0
      path: 1
      span: 103
      span: 19
      span: 24
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 0
      path: 3
      span: 103
      span: 27
      span: 28
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 1
      span: 104
      span: 4
      span: 27
      trailing_comments: " Exclusive.\n"
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 1
      path: 4
      span: 104
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 1
      path: 5
      span: 104
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 1
      path: 1
      span: 104
      span: 19
      span: 22
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 1
      path: 3
      span: 104
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 2
      span: 106
      span: 4
      span: 47
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 2
      path: 4
      span: 106
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 2
      path: 6
      span: 106
      span: 13
      span: 34
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 2
      path: 1
      span: 106
      span: 35
      span: 42
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 0
      path: 2
      path: 2
      path: 3
      span: 106
      span: 45
      span: 46
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 5
      span: 108
      span: 2
      span: 46
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 5
      path: 4
      span: 108
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 5
      path: 6
      span: 108
      span: 11
      span: 25
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 5
      path: 1
      span: 108
      span: 26
      span: 41
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 5
      path: 3
      span: 108
      span: 44
      span: 45
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 6
      span: 110
      span: 2
      span: 47
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 6
      path: 4
      span: 110
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 6
      path: 6
      span: 110
      span: 11
      span: 31
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 6
      path: 1
      span: 110
      span: 32
      span: 42
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 6
      path: 3
      span: 110
      span: 45
      span: 46
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 7
      span: 112
      span: 2
      span: 38
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 7
      path: 4
      span: 112
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 7
      path: 6
      span: 112
      span: 11
      span: 25
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 7
      path: 1
      span: 112
      span: 26
      span: 33
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 7
      path: 3
      span: 112
      span: 36
      span: 37
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      span: 117
      span: 2
      span: 120
      span: 3
      leading_comments: " Range of reserved tag numbers. Reserved tag numbers may not be used by\n fields or extension ranges in the same message. Reserved ranges may\n not overlap.\n"
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 1
      span: 117
      span: 10
      span: 23
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 0
      span: 118
      span: 4
      span: 29
      trailing_comments: " Inclusive.\n"
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 0
      path: 4
      span: 118
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 0
      path: 5
      span: 118
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 0
      path: 1
      span: 118
      span: 19
      span: 24
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 0
      path: 3
      span: 118
      span: 27
      span: 28
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 1
      span: 119
      span: 4
      span: 27
      trailing_comments: " Exclusive.\n"
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 1
      path: 4
      span: 119
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 1
      path: 5
      span: 119
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 1
      path: 1
      span: 119
      span: 19
      span: 22
    }
    location {
      path: 4
      path: 2
      path: 3
      path: 1
      path: 2
      path: 1
      path: 3
      span: 119
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 8
      span: 121
      span: 2
      span: 44
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 8
      path: 4
      span: 121
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 8
      path: 6
      span: 121
      span: 11
      span: 24
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 8
      path: 1
      span: 121
      span: 25
      span: 39
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 8
      path: 3
      span: 121
      span: 42
      span: 43
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 9
      span: 124
      span: 2
      span: 37
      leading_comments: " Reserved field names, which may not be used by fields in the same message.\n A given name may only be reserved once.\n"
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 9
      path: 4
      span: 124
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 9
      path: 5
      span: 124
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 9
      path: 1
      span: 124
      span: 18
      span: 31
    }
    location {
      path: 4
      path: 2
      path: 2
      path: 9
      path: 3
      span: 124
      span: 34
      span: 36
    }
    location {
      path: 4
      path: 3
      span: 127
      span: 0
      span: 133
      span: 1
    }
    location {
      path: 4
      path: 3
      path: 1
      span: 127
      span: 8
      span: 29
    }
    location {
      path: 4
      path: 3
      path: 2
      path: 0
      span: 129
      span: 2
      span: 58
      leading_comments: " The parser stores options it doesn\'t recognize here. See above.\n"
    }
    location {
      path: 4
      path: 3
      path: 2
      path: 0
      path: 4
      span: 129
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 3
      path: 2
      path: 0
      path: 6
      span: 129
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 3
      path: 2
      path: 0
      path: 1
      span: 129
      span: 31
      span: 51
    }
    location {
      path: 4
      path: 3
      path: 2
      path: 0
      path: 3
      span: 129
      span: 54
      span: 57
    }
    location {
      path: 4
      path: 3
      path: 5
      span: 132
      span: 2
      span: 25
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: 4
      path: 3
      path: 5
      path: 0
      span: 132
      span: 13
      span: 24
    }
    location {
      path: 4
      path: 3
      path: 5
      path: 0
      path: 1
      span: 132
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 3
      path: 5
      path: 0
      path: 2
      span: 132
      span: 21
      span: 24
    }
    location {
      path: 4
      path: 4
      span: 136
      span: 0
      span: 214
      span: 1
      leading_comments: " Describes a field within a message.\n"
    }
    location {
      path: 4
      path: 4
      path: 1
      span: 136
      span: 8
      span: 28
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      span: 137
      span: 2
      span: 168
      span: 3
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 1
      span: 137
      span: 7
      span: 11
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 0
      span: 140
      span: 4
      span: 20
      leading_comments: " 0 is reserved for errors.\n Order is weird for historical reasons.\n"
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 0
      path: 1
      span: 140
      span: 4
      span: 15
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 0
      path: 2
      span: 140
      span: 18
      span: 19
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 1
      span: 141
      span: 4
      span: 19
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 1
      path: 1
      span: 141
      span: 4
      span: 14
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 1
      path: 2
      span: 141
      span: 17
      span: 18
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 2
      span: 144
      span: 4
      span: 19
      leading_comments: " Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n negative values are likely.\n"
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 2
      path: 1
      span: 144
      span: 4
      span: 14
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 2
      path: 2
      span: 144
      span: 17
      span: 18
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 3
      span: 145
      span: 4
      span: 20
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 3
      path: 1
      span: 145
      span: 4
      span: 15
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 3
      path: 2
      span: 145
      span: 18
      span: 19
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 4
      span: 148
      span: 4
      span: 19
      leading_comments: " Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n negative values are likely.\n"
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 4
      path: 1
      span: 148
      span: 4
      span: 14
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 4
      path: 2
      span: 148
      span: 17
      span: 18
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 5
      span: 149
      span: 4
      span: 21
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 5
      path: 1
      span: 149
      span: 4
      span: 16
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 5
      path: 2
      span: 149
      span: 19
      span: 20
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 6
      span: 150
      span: 4
      span: 21
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 6
      path: 1
      span: 150
      span: 4
      span: 16
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 6
      path: 2
      span: 150
      span: 19
      span: 20
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 7
      span: 151
      span: 4
      span: 18
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 7
      path: 1
      span: 151
      span: 4
      span: 13
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 7
      path: 2
      span: 151
      span: 16
      span: 17
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 8
      span: 152
      span: 4
      span: 20
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 8
      path: 1
      span: 152
      span: 4
      span: 15
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 8
      path: 2
      span: 152
      span: 18
      span: 19
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 9
      span: 157
      span: 4
      span: 20
      leading_comments: " Tag-delimited aggregate.\n Group type is deprecated and not supported in proto3. However, Proto3\n implementations should still be able to parse the group wire format and\n treat group fields as unknown fields.\n"
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 9
      path: 1
      span: 157
      span: 4
      span: 14
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 9
      path: 2
      span: 157
      span: 17
      span: 19
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 10
      span: 158
      span: 4
      span: 22
      trailing_comments: " Length-delimited aggregate.\n"
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 10
      path: 1
      span: 158
      span: 4
      span: 16
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 10
      path: 2
      span: 158
      span: 19
      span: 21
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 11
      span: 161
      span: 4
      span: 20
      leading_comments: " New in version 2.\n"
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 11
      path: 1
      span: 161
      span: 4
      span: 14
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 11
      path: 2
      span: 161
      span: 17
      span: 19
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 12
      span: 162
      span: 4
      span: 21
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 12
      path: 1
      span: 162
      span: 4
      span: 15
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 12
      path: 2
      span: 162
      span: 18
      span: 20
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 13
      span: 163
      span: 4
      span: 19
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 13
      path: 1
      span: 163
      span: 4
      span: 13
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 13
      path: 2
      span: 163
      span: 16
      span: 18
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 14
      span: 164
      span: 4
      span: 23
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 14
      path: 1
      span: 164
      span: 4
      span: 17
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 14
      path: 2
      span: 164
      span: 20
      span: 22
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 15
      span: 165
      span: 4
      span: 23
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 15
      path: 1
      span: 165
      span: 4
      span: 17
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 15
      path: 2
      span: 165
      span: 20
      span: 22
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 16
      span: 166
      span: 4
      span: 21
      trailing_comments: " Uses ZigZag encoding.\n"
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 16
      path: 1
      span: 166
      span: 4
      span: 15
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 16
      path: 2
      span: 166
      span: 18
      span: 20
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 17
      span: 167
      span: 4
      span: 21
      trailing_comments: " Uses ZigZag encoding.\n"
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 17
      path: 1
      span: 167
      span: 4
      span: 15
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 0
      path: 2
      path: 17
      path: 2
      span: 167
      span: 18
      span: 20
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      span: 170
      span: 2
      span: 175
      span: 3
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 1
      span: 170
      span: 7
      span: 12
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 2
      path: 0
      span: 172
      span: 4
      span: 23
      leading_comments: " 0 is reserved for errors\n"
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 2
      path: 0
      path: 1
      span: 172
      span: 4
      span: 18
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 2
      path: 0
      path: 2
      span: 172
      span: 21
      span: 22
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 2
      path: 1
      span: 173
      span: 4
      span: 23
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 2
      path: 1
      path: 1
      span: 173
      span: 4
      span: 18
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 2
      path: 1
      path: 2
      span: 173
      span: 21
      span: 22
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 2
      path: 2
      span: 174
      span: 4
      span: 23
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 2
      path: 2
      path: 1
      span: 174
      span: 4
      span: 18
    }
    location {
      path: 4
      path: 4
      path: 4
      path: 1
      path: 2
      path: 2
      path: 2
      span: 174
      span: 21
      span: 22
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 0
      span: 177
      span: 2
      span: 27
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 0
      path: 4
      span: 177
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 0
      path: 5
      span: 177
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 0
      path: 1
      span: 177
      span: 18
      span: 22
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 0
      path: 3
      span: 177
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 1
      span: 178
      span: 2
      span: 28
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 1
      path: 4
      span: 178
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 1
      path: 5
      span: 178
      span: 11
      span: 16
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 1
      path: 1
      span: 178
      span: 17
      span: 23
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 1
      path: 3
      span: 178
      span: 26
      span: 27
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 2
      span: 179
      span: 2
      span: 27
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 2
      path: 4
      span: 179
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 2
      path: 6
      span: 179
      span: 11
      span: 16
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 2
      path: 1
      span: 179
      span: 17
      span: 22
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 2
      path: 3
      span: 179
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 3
      span: 183
      span: 2
      span: 25
      leading_comments: " If type_name is set, this need not be set.  If both this and type_name\n are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.\n"
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 3
      path: 4
      span: 183
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 3
      path: 6
      span: 183
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 3
      path: 1
      span: 183
      span: 16
      span: 20
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 3
      path: 3
      span: 183
      span: 23
      span: 24
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 4
      span: 190
      span: 2
      span: 32
      leading_comments: " For message and enum types, this is the name of the type.  If the name\n starts with a \'.\', it is fully-qualified.  Otherwise, C++-like scoping\n rules are used to find the type (i.e. first the nested types within this\n message are searched, then within the parent, on up to the root\n namespace).\n"
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 4
      path: 4
      span: 190
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 4
      path: 5
      span: 190
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 4
      path: 1
      span: 190
      span: 18
      span: 27
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 4
      path: 3
      span: 190
      span: 30
      span: 31
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 5
      span: 194
      span: 2
      span: 31
      leading_comments: " For extensions, this is the name of the type being extended.  It is\n resolved in the same manner as type_name.\n"
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 5
      path: 4
      span: 194
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 5
      path: 5
      span: 194
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 5
      path: 1
      span: 194
      span: 18
      span: 26
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 5
      path: 3
      span: 194
      span: 29
      span: 30
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 6
      span: 201
      span: 2
      span: 36
      leading_comments: " For numeric types, contains the original text representation of the value.\n For booleans, \"true\" or \"false\".\n For strings, contains the default text contents (not escaped in any way).\n For bytes, contains the C escaped value.  All bytes >= 128 are escaped.\n TODO(kenton):  Base-64 encode?\n"
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 6
      path: 4
      span: 201
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 6
      path: 5
      span: 201
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 6
      path: 1
      span: 201
      span: 18
      span: 31
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 6
      path: 3
      span: 201
      span: 34
      span: 35
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 7
      span: 205
      span: 2
      span: 33
      leading_comments: " If set, gives the index of a oneof in the containing type\'s oneof_decl\n list.  This field is a member of that oneof.\n"
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 7
      path: 4
      span: 205
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 7
      path: 5
      span: 205
      span: 11
      span: 16
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 7
      path: 1
      span: 205
      span: 17
      span: 28
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 7
      path: 3
      span: 205
      span: 31
      span: 32
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 8
      span: 211
      span: 2
      span: 33
      leading_comments: " JSON name of this field. The value is set by protocol compiler. If the\n user has set a \"json_name\" option on this field, that option\'s value\n will be used. Otherwise, it\'s deduced from the field\'s name by converting\n it to camelCase.\n"
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 8
      path: 4
      span: 211
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 8
      path: 5
      span: 211
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 8
      path: 1
      span: 211
      span: 18
      span: 27
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 8
      path: 3
      span: 211
      span: 30
      span: 32
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 9
      span: 213
      span: 2
      span: 36
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 9
      path: 4
      span: 213
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 9
      path: 6
      span: 213
      span: 11
      span: 23
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 9
      path: 1
      span: 213
      span: 24
      span: 31
    }
    location {
      path: 4
      path: 4
      path: 2
      path: 9
      path: 3
      span: 213
      span: 34
      span: 35
    }
    location {
      path: 4
      path: 5
      span: 217
      span: 0
      span: 220
      span: 1
      leading_comments: " Describes a oneof.\n"
    }
    location {
      path: 4
      path: 5
      path: 1
      span: 217
      span: 8
      span: 28
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 0
      span: 218
      span: 2
      span: 27
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 0
      path: 4
      span: 218
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 0
      path: 5
      span: 218
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 0
      path: 1
      span: 218
      span: 18
      span: 22
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 0
      path: 3
      span: 218
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 1
      span: 219
      span: 2
      span: 36
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 1
      path: 4
      span: 219
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 1
      path: 6
      span: 219
      span: 11
      span: 23
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 1
      path: 1
      span: 219
      span: 24
      span: 31
    }
    location {
      path: 4
      path: 5
      path: 2
      path: 1
      path: 3
      span: 219
      span: 34
      span: 35
    }
    location {
      path: 4
      path: 6
      span: 223
      span: 0
      span: 249
      span: 1
      leading_comments: " Describes an enum type.\n"
    }
    location {
      path: 4
      path: 6
      path: 1
      span: 223
      span: 8
      span: 27
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 0
      span: 224
      span: 2
      span: 27
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 0
      path: 4
      span: 224
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 0
      path: 5
      span: 224
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 0
      path: 1
      span: 224
      span: 18
      span: 22
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 0
      path: 3
      span: 224
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 1
      span: 226
      span: 2
      span: 46
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 1
      path: 4
      span: 226
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 1
      path: 6
      span: 226
      span: 11
      span: 35
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 1
      path: 1
      span: 226
      span: 36
      span: 41
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 1
      path: 3
      span: 226
      span: 44
      span: 45
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 2
      span: 228
      span: 2
      span: 35
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 2
      path: 4
      span: 228
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 2
      path: 6
      span: 228
      span: 11
      span: 22
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 2
      path: 1
      span: 228
      span: 23
      span: 30
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 2
      path: 3
      span: 228
      span: 33
      span: 34
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      span: 236
      span: 2
      span: 239
      span: 3
      leading_comments: " Range of reserved numeric values. Reserved values may not be used by\n entries in the same enum. Reserved ranges may not overlap.\n\n Note that this is distinct from DescriptorProto.ReservedRange in that it\n is inclusive such that it can appropriately represent the entire int32\n domain.\n"
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 1
      span: 236
      span: 10
      span: 27
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 0
      span: 237
      span: 4
      span: 29
      trailing_comments: " Inclusive.\n"
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 0
      path: 4
      span: 237
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 0
      path: 5
      span: 237
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 0
      path: 1
      span: 237
      span: 19
      span: 24
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 0
      path: 3
      span: 237
      span: 27
      span: 28
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 1
      span: 238
      span: 4
      span: 27
      trailing_comments: " Inclusive.\n"
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 1
      path: 4
      span: 238
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 1
      path: 5
      span: 238
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 1
      path: 1
      span: 238
      span: 19
      span: 22
    }
    location {
      path: 4
      path: 6
      path: 3
      path: 0
      path: 2
      path: 1
      path: 3
      span: 238
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 3
      span: 244
      span: 2
      span: 48
      leading_comments: " Range of reserved numeric values. Reserved numeric values may not be used\n by enum values in the same enum declaration. Reserved ranges may not\n overlap.\n"
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 3
      path: 4
      span: 244
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 3
      path: 6
      span: 244
      span: 11
      span: 28
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 3
      path: 1
      span: 244
      span: 29
      span: 43
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 3
      path: 3
      span: 244
      span: 46
      span: 47
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 4
      span: 248
      span: 2
      span: 36
      leading_comments: " Reserved enum value names, which may not be reused. A given name may only\n be reserved once.\n"
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 4
      path: 4
      span: 248
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 4
      path: 5
      span: 248
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 4
      path: 1
      span: 248
      span: 18
      span: 31
    }
    location {
      path: 4
      path: 6
      path: 2
      path: 4
      path: 3
      span: 248
      span: 34
      span: 35
    }
    location {
      path: 4
      path: 7
      span: 252
      span: 0
      span: 257
      span: 1
      leading_comments: " Describes a value within an enum.\n"
    }
    location {
      path: 4
      path: 7
      path: 1
      span: 252
      span: 8
      span: 32
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 0
      span: 253
      span: 2
      span: 27
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 0
      path: 4
      span: 253
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 0
      path: 5
      span: 253
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 0
      path: 1
      span: 253
      span: 18
      span: 22
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 0
      path: 3
      span: 253
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 1
      span: 254
      span: 2
      span: 28
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 1
      path: 4
      span: 254
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 1
      path: 5
      span: 254
      span: 11
      span: 16
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 1
      path: 1
      span: 254
      span: 17
      span: 23
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 1
      path: 3
      span: 254
      span: 26
      span: 27
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 2
      span: 256
      span: 2
      span: 40
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 2
      path: 4
      span: 256
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 2
      path: 6
      span: 256
      span: 11
      span: 27
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 2
      path: 1
      span: 256
      span: 28
      span: 35
    }
    location {
      path: 4
      path: 7
      path: 2
      path: 2
      path: 3
      span: 256
      span: 38
      span: 39
    }
    location {
      path: 4
      path: 8
      span: 260
      span: 0
      span: 265
      span: 1
      leading_comments: " Describes a service.\n"
    }
    location {
      path: 4
      path: 8
      path: 1
      span: 260
      span: 8
      span: 30
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 0
      span: 261
      span: 2
      span: 27
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 0
      path: 4
      span: 261
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 0
      path: 5
      span: 261
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 0
      path: 1
      span: 261
      span: 18
      span: 22
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 0
      path: 3
      span: 261
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 1
      span: 262
      span: 2
      span: 44
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 1
      path: 4
      span: 262
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 1
      path: 6
      span: 262
      span: 11
      span: 32
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 1
      path: 1
      span: 262
      span: 33
      span: 39
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 1
      path: 3
      span: 262
      span: 42
      span: 43
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 2
      span: 264
      span: 2
      span: 38
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 2
      path: 4
      span: 264
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 2
      path: 6
      span: 264
      span: 11
      span: 25
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 2
      path: 1
      span: 264
      span: 26
      span: 33
    }
    location {
      path: 4
      path: 8
      path: 2
      path: 2
      path: 3
      span: 264
      span: 36
      span: 37
    }
    location {
      path: 4
      path: 9
      span: 268
      span: 0
      span: 282
      span: 1
      leading_comments: " Describes a method of a service.\n"
    }
    location {
      path: 4
      path: 9
      path: 1
      span: 268
      span: 8
      span: 29
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 0
      span: 269
      span: 2
      span: 27
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 0
      path: 4
      span: 269
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 0
      path: 5
      span: 269
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 0
      path: 1
      span: 269
      span: 18
      span: 22
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 0
      path: 3
      span: 269
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 1
      span: 273
      span: 2
      span: 33
      leading_comments: " Input and output type names.  These are resolved in the same way as\n FieldDescriptorProto.type_name, but must refer to a message type.\n"
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 1
      path: 4
      span: 273
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 1
      path: 5
      span: 273
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 1
      path: 1
      span: 273
      span: 18
      span: 28
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 1
      path: 3
      span: 273
      span: 31
      span: 32
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 2
      span: 274
      span: 2
      span: 34
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 2
      path: 4
      span: 274
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 2
      path: 5
      span: 274
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 2
      path: 1
      span: 274
      span: 18
      span: 29
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 2
      path: 3
      span: 274
      span: 32
      span: 33
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 3
      span: 276
      span: 2
      span: 37
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 3
      path: 4
      span: 276
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 3
      path: 6
      span: 276
      span: 11
      span: 24
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 3
      path: 1
      span: 276
      span: 25
      span: 32
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 3
      path: 3
      span: 276
      span: 35
      span: 36
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 4
      span: 279
      span: 2
      span: 55
      leading_comments: " Identifies if client streams multiple client messages\n"
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 4
      path: 4
      span: 279
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 4
      path: 5
      span: 279
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 4
      path: 1
      span: 279
      span: 16
      span: 32
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 4
      path: 3
      span: 279
      span: 35
      span: 36
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 4
      path: 8
      span: 279
      span: 37
      span: 54
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 4
      path: 7
      span: 279
      span: 48
      span: 53
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 5
      span: 281
      span: 2
      span: 55
      leading_comments: " Identifies if server streams multiple server messages\n"
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 5
      path: 4
      span: 281
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 5
      path: 5
      span: 281
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 5
      path: 1
      span: 281
      span: 16
      span: 32
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 5
      path: 3
      span: 281
      span: 35
      span: 36
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 5
      path: 8
      span: 281
      span: 37
      span: 54
    }
    location {
      path: 4
      path: 9
      path: 2
      path: 5
      path: 7
      span: 281
      span: 48
      span: 53
    }
    location {
      path: 4
      path: 10
      span: 317
      span: 0
      span: 440
      span: 1
      leading_detached_comments: " ===================================================================\n Options\n"
      leading_detached_comments: " Each of the definitions above may have \"options\" attached.  These are\n just annotations which may cause code to be generated slightly differently\n or may contain hints for code that manipulates protocol messages.\n\n Clients may define custom options as extensions of the *Options messages.\n These extensions may not yet be known at parsing time, so the parser cannot\n store the values in them.  Instead it stores them in a field in the *Options\n message called uninterpreted_option. This field must have the same name\n across all *Options messages. We then use this field to populate the\n extensions when we build a descriptor, at which point all protos have been\n parsed and so all extensions are known.\n\n Extension numbers for custom options may be chosen as follows:\n * For options which will only be used within a single application or\n   organization, or for experimental options, use field numbers 50000\n   through 99999.  It is up to you to ensure that you do not use the\n   same number for multiple options.\n * For options which will be published and used publicly by multiple\n   independent entities, e-mail protobuf-global-extension-registry@google.com\n   to reserve extension numbers. Simply provide your project name (e.g.\n   Objective-C plugin) and your project website (if available) -- there\'s no\n   need to explain how you intend to use them. Usually you only need one\n   extension number. You can declare multiple options with only one extension\n   number by putting them in a sub-message. See the Custom Options section of\n   the docs for examples:\n   https://developers.google.com/protocol-buffers/docs/proto#options\n   If this turns out to be popular, a web service will be set up\n   to automatically assign option numbers.\n"
    }
    location {
      path: 4
      path: 10
      path: 1
      span: 317
      span: 8
      span: 19
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 0
      span: 323
      span: 2
      span: 35
      leading_comments: " Sets the Java package where classes generated from this .proto will be\n placed.  By default, the proto package is used, but this is often\n inappropriate because proto packages do not normally start with backwards\n domain names.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 0
      path: 4
      span: 323
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 0
      path: 5
      span: 323
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 0
      path: 1
      span: 323
      span: 18
      span: 30
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 0
      path: 3
      span: 323
      span: 33
      span: 34
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 1
      span: 331
      span: 2
      span: 43
      leading_comments: " If set, all the classes from the .proto file are wrapped in a single\n outer class with the given name.  This applies to both Proto1\n (equivalent to the old \"--one_java_file\" option) and Proto2 (where\n a .proto always translates to a single class, but you may want to\n explicitly choose the class name).\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 1
      path: 4
      span: 331
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 1
      path: 5
      span: 331
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 1
      path: 1
      span: 331
      span: 18
      span: 38
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 1
      path: 3
      span: 331
      span: 41
      span: 42
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 2
      span: 339
      span: 2
      span: 59
      leading_comments: " If set true, then the Java code generator will generate a separate .java\n file for each top-level message, enum, and service defined in the .proto\n file.  Thus, these types will *not* be nested inside the outer class\n named by java_outer_classname.  However, the outer class will still be\n generated to contain the file\'s getDescriptor() method as well as any\n top-level extensions defined in the file.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 2
      path: 4
      span: 339
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 2
      path: 5
      span: 339
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 2
      path: 1
      span: 339
      span: 16
      span: 35
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 2
      path: 3
      span: 339
      span: 38
      span: 40
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 2
      path: 8
      span: 339
      span: 41
      span: 58
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 2
      path: 7
      span: 339
      span: 52
      span: 57
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 3
      span: 342
      span: 2
      span: 69
      leading_comments: " This option does nothing.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 3
      path: 4
      span: 342
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 3
      path: 5
      span: 342
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 3
      path: 1
      span: 342
      span: 16
      span: 45
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 3
      path: 3
      span: 342
      span: 48
      span: 50
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 3
      path: 8
      span: 342
      span: 51
      span: 68
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 3
      path: 8
      path: 3
      span: 342
      span: 52
      span: 67
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 4
      span: 350
      span: 2
      span: 62
      leading_comments: " If set true, then the Java2 code generator will generate code that\n throws an exception whenever an attempt is made to assign a non-UTF-8\n byte sequence to a string field.\n Message reflection will do the same.\n However, an extension field still accepts non-UTF-8 byte sequences.\n This option has no effect on when used with the lite runtime.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 4
      path: 4
      span: 350
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 4
      path: 5
      span: 350
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 4
      path: 1
      span: 350
      span: 16
      span: 38
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 4
      path: 3
      span: 350
      span: 41
      span: 43
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 4
      path: 8
      span: 350
      span: 44
      span: 61
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 4
      path: 7
      span: 350
      span: 55
      span: 60
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      span: 354
      span: 2
      span: 359
      span: 3
      leading_comments: " Generated classes can be optimized for speed or code size.\n"
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 1
      span: 354
      span: 7
      span: 19
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 2
      path: 0
      span: 355
      span: 4
      span: 14
      trailing_comments: " Generate complete code for parsing, serialization,\n"
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 2
      path: 0
      path: 1
      span: 355
      span: 4
      span: 9
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 2
      path: 0
      path: 2
      span: 355
      span: 12
      span: 13
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 2
      path: 1
      span: 357
      span: 4
      span: 18
      leading_comments: " etc.\n"
      trailing_comments: " Use ReflectionOps to implement these methods.\n"
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 2
      path: 1
      path: 1
      span: 357
      span: 4
      span: 13
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 2
      path: 1
      path: 2
      span: 357
      span: 16
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 2
      path: 2
      span: 358
      span: 4
      span: 21
      trailing_comments: " Generate code using MessageLite and the lite runtime.\n"
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 2
      path: 2
      path: 1
      span: 358
      span: 4
      span: 16
    }
    location {
      path: 4
      path: 10
      path: 4
      path: 0
      path: 2
      path: 2
      path: 2
      span: 358
      span: 19
      span: 20
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 5
      span: 360
      span: 2
      span: 59
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 5
      path: 4
      span: 360
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 5
      path: 6
      span: 360
      span: 11
      span: 23
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 5
      path: 1
      span: 360
      span: 24
      span: 36
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 5
      path: 3
      span: 360
      span: 39
      span: 40
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 5
      path: 8
      span: 360
      span: 41
      span: 58
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 5
      path: 7
      span: 360
      span: 52
      span: 57
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 6
      span: 367
      span: 2
      span: 34
      leading_comments: " Sets the Go package where structs generated from this .proto will be\n placed. If omitted, the Go package will be derived from the following:\n   - The basename of the package import path, if provided.\n   - Otherwise, the package statement in the .proto file, if present.\n   - Otherwise, the basename of the .proto file, without extension.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 6
      path: 4
      span: 367
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 6
      path: 5
      span: 367
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 6
      path: 1
      span: 367
      span: 18
      span: 28
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 6
      path: 3
      span: 367
      span: 31
      span: 33
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 7
      span: 382
      span: 2
      span: 59
      leading_comments: " Should generic services be generated in each language?  \"Generic\" services\n are not specific to any particular RPC system.  They are generated by the\n main code generators in each language (without additional plugins).\n Generic services were the only kind of service generation supported by\n early versions of google.protobuf.\n\n Generic services are now considered deprecated in favor of using plugins\n that generate code specific to your particular RPC system.  Therefore,\n these default to false.  Old code which depends on generic services should\n explicitly set them to true.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 7
      path: 4
      span: 382
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 7
      path: 5
      span: 382
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 7
      path: 1
      span: 382
      span: 16
      span: 35
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 7
      path: 3
      span: 382
      span: 38
      span: 40
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 7
      path: 8
      span: 382
      span: 41
      span: 58
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 7
      path: 7
      span: 382
      span: 52
      span: 57
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 8
      span: 383
      span: 2
      span: 61
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 8
      path: 4
      span: 383
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 8
      path: 5
      span: 383
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 8
      path: 1
      span: 383
      span: 16
      span: 37
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 8
      path: 3
      span: 383
      span: 40
      span: 42
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 8
      path: 8
      span: 383
      span: 43
      span: 60
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 8
      path: 7
      span: 383
      span: 54
      span: 59
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 9
      span: 384
      span: 2
      span: 59
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 9
      path: 4
      span: 384
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 9
      path: 5
      span: 384
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 9
      path: 1
      span: 384
      span: 16
      span: 35
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 9
      path: 3
      span: 384
      span: 38
      span: 40
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 9
      path: 8
      span: 384
      span: 41
      span: 58
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 9
      path: 7
      span: 384
      span: 52
      span: 57
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 10
      span: 385
      span: 2
      span: 60
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 10
      path: 4
      span: 385
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 10
      path: 5
      span: 385
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 10
      path: 1
      span: 385
      span: 16
      span: 36
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 10
      path: 3
      span: 385
      span: 39
      span: 41
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 10
      path: 8
      span: 385
      span: 42
      span: 59
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 10
      path: 7
      span: 385
      span: 53
      span: 58
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 11
      span: 391
      span: 2
      span: 50
      leading_comments: " Is this file deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for everything in the file, or it will be completely ignored; in the very\n least, this is a formalization for deprecating files.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 11
      path: 4
      span: 391
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 11
      path: 5
      span: 391
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 11
      path: 1
      span: 391
      span: 16
      span: 26
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 11
      path: 3
      span: 391
      span: 29
      span: 31
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 11
      path: 8
      span: 391
      span: 32
      span: 49
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 11
      path: 7
      span: 391
      span: 43
      span: 48
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 12
      span: 395
      span: 2
      span: 56
      leading_comments: " Enables the use of arenas for the proto messages in this file. This applies\n only to generated classes for C++.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 12
      path: 4
      span: 395
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 12
      path: 5
      span: 395
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 12
      path: 1
      span: 395
      span: 16
      span: 32
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 12
      path: 3
      span: 395
      span: 35
      span: 37
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 12
      path: 8
      span: 395
      span: 38
      span: 55
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 12
      path: 7
      span: 395
      span: 49
      span: 54
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 13
      span: 400
      span: 2
      span: 41
      leading_comments: " Sets the objective c class prefix which is prepended to all objective c\n generated classes from this .proto. There is no default.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 13
      path: 4
      span: 400
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 13
      path: 5
      span: 400
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 13
      path: 1
      span: 400
      span: 18
      span: 35
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 13
      path: 3
      span: 400
      span: 38
      span: 40
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 14
      span: 403
      span: 2
      span: 40
      leading_comments: " Namespace for generated classes; defaults to the package.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 14
      path: 4
      span: 403
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 14
      path: 5
      span: 403
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 14
      path: 1
      span: 403
      span: 18
      span: 34
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 14
      path: 3
      span: 403
      span: 37
      span: 39
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 15
      span: 409
      span: 2
      span: 36
      leading_comments: " By default Swift generators will take the proto package and CamelCase it\n replacing \'.\' with underscore and use that to prefix the types/symbols\n defined. When this options is provided, they will use this value instead\n to prefix the types/symbols defined.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 15
      path: 4
      span: 409
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 15
      path: 5
      span: 409
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 15
      path: 1
      span: 409
      span: 18
      span: 30
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 15
      path: 3
      span: 409
      span: 33
      span: 35
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 16
      span: 413
      span: 2
      span: 40
      leading_comments: " Sets the php class prefix which is prepended to all php generated classes\n from this .proto. Default is empty.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 16
      path: 4
      span: 413
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 16
      path: 5
      span: 413
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 16
      path: 1
      span: 413
      span: 18
      span: 34
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 16
      path: 3
      span: 413
      span: 37
      span: 39
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 17
      span: 418
      span: 2
      span: 37
      leading_comments: " Use this option to change the namespace of php generated classes. Default\n is empty. When this option is empty, the package name will be used for\n determining the namespace.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 17
      path: 4
      span: 418
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 17
      path: 5
      span: 418
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 17
      path: 1
      span: 418
      span: 18
      span: 31
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 17
      path: 3
      span: 418
      span: 34
      span: 36
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 18
      span: 423
      span: 2
      span: 46
      leading_comments: " Use this option to change the namespace of php generated metadata classes.\n Default is empty. When this option is empty, the proto file name will be\n used for determining the namespace.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 18
      path: 4
      span: 423
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 18
      path: 5
      span: 423
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 18
      path: 1
      span: 423
      span: 18
      span: 40
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 18
      path: 3
      span: 423
      span: 43
      span: 45
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 19
      span: 428
      span: 2
      span: 36
      leading_comments: " Use this option to change the package of ruby generated classes. Default\n is empty. When this option is not set, the package name will be used for\n determining the ruby package.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 19
      path: 4
      span: 428
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 19
      path: 5
      span: 428
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 19
      path: 1
      span: 428
      span: 18
      span: 30
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 19
      path: 3
      span: 428
      span: 33
      span: 35
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 20
      span: 433
      span: 2
      span: 58
      leading_comments: " The parser stores options it doesn\'t recognize here.\n See the documentation for the \"Options\" section above.\n"
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 20
      path: 4
      span: 433
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 20
      path: 6
      span: 433
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 20
      path: 1
      span: 433
      span: 31
      span: 51
    }
    location {
      path: 4
      path: 10
      path: 2
      path: 20
      path: 3
      span: 433
      span: 54
      span: 57
    }
    location {
      path: 4
      path: 10
      path: 5
      span: 437
      span: 2
      span: 25
      leading_comments: " Clients can define custom options in extensions of this message.\n See the documentation for the \"Options\" section above.\n"
    }
    location {
      path: 4
      path: 10
      path: 5
      path: 0
      span: 437
      span: 13
      span: 24
    }
    location {
      path: 4
      path: 10
      path: 5
      path: 0
      path: 1
      span: 437
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 10
      path: 5
      path: 0
      path: 2
      span: 437
      span: 21
      span: 24
    }
    location {
      path: 4
      path: 10
      path: 9
      span: 439
      span: 2
      span: 14
    }
    location {
      path: 4
      path: 10
      path: 9
      path: 0
      span: 439
      span: 11
      span: 13
    }
    location {
      path: 4
      path: 10
      path: 9
      path: 0
      path: 1
      span: 439
      span: 11
      span: 13
    }
    location {
      path: 4
      path: 10
      path: 9
      path: 0
      path: 2
      span: 439
      span: 11
      span: 13
    }
    location {
      path: 4
      path: 11
      span: 442
      span: 0
      span: 506
      span: 1
    }
    location {
      path: 4
      path: 11
      path: 1
      span: 442
      span: 8
      span: 22
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 0
      span: 461
      span: 2
      span: 62
      leading_comments: " Set true to use the old proto1 MessageSet wire format for extensions.\n This is provided for backwards-compatibility with the MessageSet wire\n format.  You should not use this for any other reason:  It\'s less\n efficient, has fewer features, and is more complicated.\n\n The message must be defined exactly as follows:\n   message Foo {\n     option message_set_wire_format = true;\n     extensions 4 to max;\n   }\n Note that the message cannot have any defined fields; MessageSets only\n have extensions.\n\n All extensions of your type must be singular messages; e.g. they cannot\n be int32s, enums, or repeated messages.\n\n Because this is an option, the above two restrictions are not enforced by\n the protocol compiler.\n"
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 0
      path: 4
      span: 461
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 0
      path: 5
      span: 461
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 0
      path: 1
      span: 461
      span: 16
      span: 39
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 0
      path: 3
      span: 461
      span: 42
      span: 43
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 0
      path: 8
      span: 461
      span: 44
      span: 61
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 0
      path: 7
      span: 461
      span: 55
      span: 60
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 1
      span: 466
      span: 2
      span: 70
      leading_comments: " Disables the generation of the standard \"descriptor()\" accessor, which can\n conflict with a field of the same name.  This is meant to make migration\n from proto1 easier; new code should avoid fields named \"descriptor\".\n"
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 1
      path: 4
      span: 466
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 1
      path: 5
      span: 466
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 1
      path: 1
      span: 466
      span: 16
      span: 47
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 1
      path: 3
      span: 466
      span: 50
      span: 51
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 1
      path: 8
      span: 466
      span: 52
      span: 69
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 1
      path: 7
      span: 466
      span: 63
      span: 68
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 2
      span: 472
      span: 2
      span: 49
      leading_comments: " Is this message deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the message, or it will be completely ignored; in the very least,\n this is a formalization for deprecating messages.\n"
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 2
      path: 4
      span: 472
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 2
      path: 5
      span: 472
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 2
      path: 1
      span: 472
      span: 16
      span: 26
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 2
      path: 3
      span: 472
      span: 29
      span: 30
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 2
      path: 8
      span: 472
      span: 31
      span: 48
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 2
      path: 7
      span: 472
      span: 42
      span: 47
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 3
      span: 495
      span: 2
      span: 30
      leading_comments: " Whether the message is an automatically generated map entry type for the\n maps field.\n\n For maps fields:\n     map<KeyType, ValueType> map_field = 1;\n The parsed descriptor looks like:\n     message MapFieldEntry {\n         option map_entry = true;\n         optional KeyType key = 1;\n         optional ValueType value = 2;\n     }\n     repeated MapFieldEntry map_field = 1;\n\n Implementations may choose not to generate the map_entry=true message, but\n use a native map in the target language to hold the keys and values.\n The reflection APIs in such implementations still need to work as\n if the field is a repeated message field.\n\n NOTE: Do not set the option in .proto files. Always use the maps syntax\n instead. The option should only be implicitly set by the proto compiler\n parser.\n"
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 3
      path: 4
      span: 495
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 3
      path: 5
      span: 495
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 3
      path: 1
      span: 495
      span: 16
      span: 25
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 3
      path: 3
      span: 495
      span: 28
      span: 29
    }
    location {
      path: 4
      path: 11
      path: 9
      span: 497
      span: 2
      span: 13
      trailing_comments: " javalite_serializable\n"
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 0
      span: 497
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 0
      path: 1
      span: 497
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 0
      path: 2
      span: 497
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 11
      path: 9
      span: 498
      span: 2
      span: 13
      trailing_comments: " javanano_as_lite\n"
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 1
      span: 498
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 1
      path: 1
      span: 498
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 11
      path: 9
      path: 1
      path: 2
      span: 498
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 4
      span: 502
      span: 2
      span: 58
      leading_comments: " The parser stores options it doesn\'t recognize here. See above.\n"
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 4
      path: 4
      span: 502
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 4
      path: 6
      span: 502
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 4
      path: 1
      span: 502
      span: 31
      span: 51
    }
    location {
      path: 4
      path: 11
      path: 2
      path: 4
      path: 3
      span: 502
      span: 54
      span: 57
    }
    location {
      path: 4
      path: 11
      path: 5
      span: 505
      span: 2
      span: 25
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: 4
      path: 11
      path: 5
      path: 0
      span: 505
      span: 13
      span: 24
    }
    location {
      path: 4
      path: 11
      path: 5
      path: 0
      path: 1
      span: 505
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 11
      path: 5
      path: 0
      path: 2
      span: 505
      span: 21
      span: 24
    }
    location {
      path: 4
      path: 12
      span: 508
      span: 0
      span: 599
      span: 1
    }
    location {
      path: 4
      path: 12
      path: 1
      span: 508
      span: 8
      span: 20
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 0
      span: 513
      span: 2
      span: 46
      leading_comments: " The ctype option instructs the C++ code generator to use a different\n representation of the field than it normally would.  See the specific\n options below.  This option is not yet implemented in the open source\n release -- sorry, we\'ll try to include it in a future version!\n"
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 0
      path: 4
      span: 513
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 0
      path: 6
      span: 513
      span: 11
      span: 16
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 0
      path: 1
      span: 513
      span: 17
      span: 22
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 0
      path: 3
      span: 513
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 0
      path: 8
      span: 513
      span: 27
      span: 45
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 0
      path: 7
      span: 513
      span: 38
      span: 44
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      span: 514
      span: 2
      span: 521
      span: 3
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 1
      span: 514
      span: 7
      span: 12
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 2
      path: 0
      span: 516
      span: 4
      span: 15
      leading_comments: " Default mode.\n"
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 2
      path: 0
      path: 1
      span: 516
      span: 4
      span: 10
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 2
      path: 0
      path: 2
      span: 516
      span: 13
      span: 14
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 2
      path: 1
      span: 518
      span: 4
      span: 13
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 2
      path: 1
      path: 1
      span: 518
      span: 4
      span: 8
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 2
      path: 1
      path: 2
      span: 518
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 2
      path: 2
      span: 520
      span: 4
      span: 21
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 2
      path: 2
      path: 1
      span: 520
      span: 4
      span: 16
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 0
      path: 2
      path: 2
      path: 2
      span: 520
      span: 19
      span: 20
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 1
      span: 527
      span: 2
      span: 27
      leading_comments: " The packed option can be enabled for repeated primitive fields to enable\n a more efficient representation on the wire. Rather than repeatedly\n writing the tag and type for each element, the entire array is encoded as\n a single length-delimited blob. In proto3, only explicit setting it to\n false will avoid using packed encoding.\n"
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 1
      path: 4
      span: 527
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 1
      path: 5
      span: 527
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 1
      path: 1
      span: 527
      span: 16
      span: 22
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 1
      path: 3
      span: 527
      span: 25
      span: 26
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 2
      span: 540
      span: 2
      span: 51
      leading_comments: " The jstype option determines the JavaScript type used for values of the\n field.  The option is permitted only for 64 bit integral and fixed types\n (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING\n is represented as JavaScript string, which avoids loss of precision that\n can happen when a large value is converted to a floating point JavaScript.\n Specifying JS_NUMBER for the jstype causes the generated JavaScript code to\n use the JavaScript \"number\" type.  The behavior of the default option\n JS_NORMAL is implementation dependent.\n\n This option is an enum to permit additional types to be added, e.g.\n goog.math.Integer.\n"
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 2
      path: 4
      span: 540
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 2
      path: 6
      span: 540
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 2
      path: 1
      span: 540
      span: 18
      span: 24
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 2
      path: 3
      span: 540
      span: 27
      span: 28
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 2
      path: 8
      span: 540
      span: 29
      span: 50
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 2
      path: 7
      span: 540
      span: 40
      span: 49
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      span: 541
      span: 2
      span: 550
      span: 3
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 1
      span: 541
      span: 7
      span: 13
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 2
      path: 0
      span: 543
      span: 4
      span: 18
      leading_comments: " Use the default type.\n"
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 2
      path: 0
      path: 1
      span: 543
      span: 4
      span: 13
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 2
      path: 0
      path: 2
      span: 543
      span: 16
      span: 17
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 2
      path: 1
      span: 546
      span: 4
      span: 18
      leading_comments: " Use JavaScript strings.\n"
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 2
      path: 1
      path: 1
      span: 546
      span: 4
      span: 13
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 2
      path: 1
      path: 2
      span: 546
      span: 16
      span: 17
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 2
      path: 2
      span: 549
      span: 4
      span: 18
      leading_comments: " Use JavaScript numbers.\n"
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 2
      path: 2
      path: 1
      span: 549
      span: 4
      span: 13
    }
    location {
      path: 4
      path: 12
      path: 4
      path: 1
      path: 2
      path: 2
      path: 2
      span: 549
      span: 16
      span: 17
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 3
      span: 580
      span: 2
      span: 43
      leading_comments: " Should this field be parsed lazily?  Lazy applies only to message-type\n fields.  It means that when the outer message is initially parsed, the\n inner message\'s contents will not be parsed but instead stored in encoded\n form.  The inner message will actually be parsed when it is first accessed.\n\n This is only a hint.  Implementations are free to choose whether to use\n eager or lazy parsing regardless of the value of this option.  However,\n setting this option true suggests that the protocol author believes that\n using lazy parsing on this field is worth the additional bookkeeping\n overhead typically needed to implement it.\n\n This option does not affect the public interface of any generated code;\n all method signatures remain the same.  Furthermore, thread-safety of the\n interface is not affected by this option; const methods remain safe to\n call from multiple threads concurrently, while non-const methods continue\n to require exclusive access.\n\n\n Note that implementations may choose not to check required fields within\n a lazy sub-message.  That is, calling IsInitialized() on the outer message\n may return true even if the inner message has missing required fields.\n This is necessary because otherwise the inner message would have to be\n parsed in order to perform the check, defeating the purpose of lazy\n parsing.  An implementation which chooses not to check required fields\n must be consistent about it.  That is, for any particular sub-message, the\n implementation must either *always* check its required fields, or *never*\n check its required fields, regardless of whether or not the message has\n been parsed.\n"
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 3
      path: 4
      span: 580
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 3
      path: 5
      span: 580
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 3
      path: 1
      span: 580
      span: 16
      span: 20
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 3
      path: 3
      span: 580
      span: 23
      span: 24
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 3
      path: 8
      span: 580
      span: 25
      span: 42
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 3
      path: 7
      span: 580
      span: 36
      span: 41
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 4
      span: 586
      span: 2
      span: 49
      leading_comments: " Is this field deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for accessors, or it will be completely ignored; in the very least, this\n is a formalization for deprecating fields.\n"
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 4
      path: 4
      span: 586
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 4
      path: 5
      span: 586
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 4
      path: 1
      span: 586
      span: 16
      span: 26
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 4
      path: 3
      span: 586
      span: 29
      span: 30
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 4
      path: 8
      span: 586
      span: 31
      span: 48
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 4
      path: 7
      span: 586
      span: 42
      span: 47
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 5
      span: 589
      span: 2
      span: 44
      leading_comments: " For Google-internal migration only. Do not use.\n"
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 5
      path: 4
      span: 589
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 5
      path: 5
      span: 589
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 5
      path: 1
      span: 589
      span: 16
      span: 20
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 5
      path: 3
      span: 589
      span: 23
      span: 25
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 5
      path: 8
      span: 589
      span: 26
      span: 43
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 5
      path: 7
      span: 589
      span: 37
      span: 42
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 6
      span: 593
      span: 2
      span: 58
      leading_comments: " The parser stores options it doesn\'t recognize here. See above.\n"
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 6
      path: 4
      span: 593
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 6
      path: 6
      span: 593
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 6
      path: 1
      span: 593
      span: 31
      span: 51
    }
    location {
      path: 4
      path: 12
      path: 2
      path: 6
      path: 3
      span: 593
      span: 54
      span: 57
    }
    location {
      path: 4
      path: 12
      path: 5
      span: 596
      span: 2
      span: 25
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: 4
      path: 12
      path: 5
      path: 0
      span: 596
      span: 13
      span: 24
    }
    location {
      path: 4
      path: 12
      path: 5
      path: 0
      path: 1
      span: 596
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 12
      path: 5
      path: 0
      path: 2
      span: 596
      span: 21
      span: 24
    }
    location {
      path: 4
      path: 12
      path: 9
      span: 598
      span: 2
      span: 13
      trailing_comments: " removed jtype\n"
    }
    location {
      path: 4
      path: 12
      path: 9
      path: 0
      span: 598
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 12
      path: 9
      path: 0
      path: 1
      span: 598
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 12
      path: 9
      path: 0
      path: 2
      span: 598
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 13
      span: 601
      span: 0
      span: 607
      span: 1
    }
    location {
      path: 4
      path: 13
      path: 1
      span: 601
      span: 8
      span: 20
    }
    location {
      path: 4
      path: 13
      path: 2
      path: 0
      span: 603
      span: 2
      span: 58
      leading_comments: " The parser stores options it doesn\'t recognize here. See above.\n"
    }
    location {
      path: 4
      path: 13
      path: 2
      path: 0
      path: 4
      span: 603
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 13
      path: 2
      path: 0
      path: 6
      span: 603
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 13
      path: 2
      path: 0
      path: 1
      span: 603
      span: 31
      span: 51
    }
    location {
      path: 4
      path: 13
      path: 2
      path: 0
      path: 3
      span: 603
      span: 54
      span: 57
    }
    location {
      path: 4
      path: 13
      path: 5
      span: 606
      span: 2
      span: 25
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: 4
      path: 13
      path: 5
      path: 0
      span: 606
      span: 13
      span: 24
    }
    location {
      path: 4
      path: 13
      path: 5
      path: 0
      path: 1
      span: 606
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 13
      path: 5
      path: 0
      path: 2
      span: 606
      span: 21
      span: 24
    }
    location {
      path: 4
      path: 14
      span: 609
      span: 0
      span: 628
      span: 1
    }
    location {
      path: 4
      path: 14
      path: 1
      span: 609
      span: 8
      span: 19
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 0
      span: 613
      span: 2
      span: 32
      leading_comments: " Set this option to true to allow mapping different tag names to the same\n value.\n"
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 0
      path: 4
      span: 613
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 0
      path: 5
      span: 613
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 0
      path: 1
      span: 613
      span: 16
      span: 27
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 0
      path: 3
      span: 613
      span: 30
      span: 31
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 1
      span: 619
      span: 2
      span: 49
      leading_comments: " Is this enum deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum, or it will be completely ignored; in the very least, this\n is a formalization for deprecating enums.\n"
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 1
      path: 4
      span: 619
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 1
      path: 5
      span: 619
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 1
      path: 1
      span: 619
      span: 16
      span: 26
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 1
      path: 3
      span: 619
      span: 29
      span: 30
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 1
      path: 8
      span: 619
      span: 31
      span: 48
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 1
      path: 7
      span: 619
      span: 42
      span: 47
    }
    location {
      path: 4
      path: 14
      path: 9
      span: 621
      span: 2
      span: 13
      trailing_comments: " javanano_as_lite\n"
    }
    location {
      path: 4
      path: 14
      path: 9
      path: 0
      span: 621
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 14
      path: 9
      path: 0
      path: 1
      span: 621
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 14
      path: 9
      path: 0
      path: 2
      span: 621
      span: 11
      span: 12
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 2
      span: 624
      span: 2
      span: 58
      leading_comments: " The parser stores options it doesn\'t recognize here. See above.\n"
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 2
      path: 4
      span: 624
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 2
      path: 6
      span: 624
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 2
      path: 1
      span: 624
      span: 31
      span: 51
    }
    location {
      path: 4
      path: 14
      path: 2
      path: 2
      path: 3
      span: 624
      span: 54
      span: 57
    }
    location {
      path: 4
      path: 14
      path: 5
      span: 627
      span: 2
      span: 25
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: 4
      path: 14
      path: 5
      path: 0
      span: 627
      span: 13
      span: 24
    }
    location {
      path: 4
      path: 14
      path: 5
      path: 0
      path: 1
      span: 627
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 14
      path: 5
      path: 0
      path: 2
      span: 627
      span: 21
      span: 24
    }
    location {
      path: 4
      path: 15
      span: 630
      span: 0
      span: 642
      span: 1
    }
    location {
      path: 4
      path: 15
      path: 1
      span: 630
      span: 8
      span: 24
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 0
      span: 635
      span: 2
      span: 49
      leading_comments: " Is this enum value deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum value, or it will be completely ignored; in the very least,\n this is a formalization for deprecating enum values.\n"
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 0
      path: 4
      span: 635
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 0
      path: 5
      span: 635
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 0
      path: 1
      span: 635
      span: 16
      span: 26
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 0
      path: 3
      span: 635
      span: 29
      span: 30
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 0
      path: 8
      span: 635
      span: 31
      span: 48
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 0
      path: 7
      span: 635
      span: 42
      span: 47
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 1
      span: 638
      span: 2
      span: 58
      leading_comments: " The parser stores options it doesn\'t recognize here. See above.\n"
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 1
      path: 4
      span: 638
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 1
      path: 6
      span: 638
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 1
      path: 1
      span: 638
      span: 31
      span: 51
    }
    location {
      path: 4
      path: 15
      path: 2
      path: 1
      path: 3
      span: 638
      span: 54
      span: 57
    }
    location {
      path: 4
      path: 15
      path: 5
      span: 641
      span: 2
      span: 25
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: 4
      path: 15
      path: 5
      path: 0
      span: 641
      span: 13
      span: 24
    }
    location {
      path: 4
      path: 15
      path: 5
      path: 0
      path: 1
      span: 641
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 15
      path: 5
      path: 0
      path: 2
      span: 641
      span: 21
      span: 24
    }
    location {
      path: 4
      path: 16
      span: 644
      span: 0
      span: 662
      span: 1
    }
    location {
      path: 4
      path: 16
      path: 1
      span: 644
      span: 8
      span: 22
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 0
      span: 655
      span: 2
      span: 50
      leading_comments: " Is this service deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the service, or it will be completely ignored; in the very least,\n this is a formalization for deprecating services.\n"
      leading_detached_comments: " Note:  Field numbers 1 through 32 are reserved for Google\'s internal RPC\n   framework.  We apologize for hoarding these numbers to ourselves, but\n   we were already using them long before we decided to release Protocol\n   Buffers.\n"
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 0
      path: 4
      span: 655
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 0
      path: 5
      span: 655
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 0
      path: 1
      span: 655
      span: 16
      span: 26
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 0
      path: 3
      span: 655
      span: 29
      span: 31
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 0
      path: 8
      span: 655
      span: 32
      span: 49
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 0
      path: 7
      span: 655
      span: 43
      span: 48
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 1
      span: 658
      span: 2
      span: 58
      leading_comments: " The parser stores options it doesn\'t recognize here. See above.\n"
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 1
      path: 4
      span: 658
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 1
      path: 6
      span: 658
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 1
      path: 1
      span: 658
      span: 31
      span: 51
    }
    location {
      path: 4
      path: 16
      path: 2
      path: 1
      path: 3
      span: 658
      span: 54
      span: 57
    }
    location {
      path: 4
      path: 16
      path: 5
      span: 661
      span: 2
      span: 25
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: 4
      path: 16
      path: 5
      path: 0
      span: 661
      span: 13
      span: 24
    }
    location {
      path: 4
      path: 16
      path: 5
      path: 0
      path: 1
      span: 661
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 16
      path: 5
      path: 0
      path: 2
      span: 661
      span: 21
      span: 24
    }
    location {
      path: 4
      path: 17
      span: 664
      span: 0
      span: 693
      span: 1
    }
    location {
      path: 4
      path: 17
      path: 1
      span: 664
      span: 8
      span: 21
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 0
      span: 675
      span: 2
      span: 50
      leading_comments: " Is this method deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the method, or it will be completely ignored; in the very least,\n this is a formalization for deprecating methods.\n"
      leading_detached_comments: " Note:  Field numbers 1 through 32 are reserved for Google\'s internal RPC\n   framework.  We apologize for hoarding these numbers to ourselves, but\n   we were already using them long before we decided to release Protocol\n   Buffers.\n"
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 0
      path: 4
      span: 675
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 0
      path: 5
      span: 675
      span: 11
      span: 15
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 0
      path: 1
      span: 675
      span: 16
      span: 26
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 0
      path: 3
      span: 675
      span: 29
      span: 31
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 0
      path: 8
      span: 675
      span: 32
      span: 49
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 0
      path: 7
      span: 675
      span: 43
      span: 48
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      span: 680
      span: 2
      span: 684
      span: 3
      leading_comments: " Is this method side-effect-free (or safe in HTTP parlance), or idempotent,\n or neither? HTTP based RPC implementation may choose GET verb for safe\n methods, and PUT verb for idempotent methods instead of the default POST.\n"
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 1
      span: 680
      span: 7
      span: 23
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 2
      path: 0
      span: 681
      span: 4
      span: 28
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 2
      path: 0
      path: 1
      span: 681
      span: 4
      span: 23
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 2
      path: 0
      path: 2
      span: 681
      span: 26
      span: 27
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 2
      path: 1
      span: 682
      span: 4
      span: 24
      trailing_comments: " implies idempotent\n"
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 2
      path: 1
      path: 1
      span: 682
      span: 4
      span: 19
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 2
      path: 1
      path: 2
      span: 682
      span: 22
      span: 23
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 2
      path: 2
      span: 683
      span: 4
      span: 19
      trailing_comments: " idempotent, but may have side effects\n"
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 2
      path: 2
      path: 1
      span: 683
      span: 4
      span: 14
    }
    location {
      path: 4
      path: 17
      path: 4
      path: 0
      path: 2
      path: 2
      path: 2
      span: 683
      span: 17
      span: 18
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 1
      span: 685
      span: 2
      span: 686
      span: 38
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 1
      path: 4
      span: 685
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 1
      path: 6
      span: 685
      span: 11
      span: 27
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 1
      path: 1
      span: 685
      span: 28
      span: 45
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 1
      path: 3
      span: 685
      span: 48
      span: 50
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 1
      path: 8
      span: 686
      span: 6
      span: 37
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 1
      path: 7
      span: 686
      span: 17
      span: 36
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 2
      span: 689
      span: 2
      span: 58
      leading_comments: " The parser stores options it doesn\'t recognize here. See above.\n"
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 2
      path: 4
      span: 689
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 2
      path: 6
      span: 689
      span: 11
      span: 30
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 2
      path: 1
      span: 689
      span: 31
      span: 51
    }
    location {
      path: 4
      path: 17
      path: 2
      path: 2
      path: 3
      span: 689
      span: 54
      span: 57
    }
    location {
      path: 4
      path: 17
      path: 5
      span: 692
      span: 2
      span: 25
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: 4
      path: 17
      path: 5
      path: 0
      span: 692
      span: 13
      span: 24
    }
    location {
      path: 4
      path: 17
      path: 5
      path: 0
      path: 1
      span: 692
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 17
      path: 5
      path: 0
      path: 2
      span: 692
      span: 21
      span: 24
    }
    location {
      path: 4
      path: 18
      span: 702
      span: 0
      span: 722
      span: 1
      leading_comments: " A message representing a option the parser does not recognize. This only\n appears in options protos created by the compiler::Parser class.\n DescriptorPool resolves these when building Descriptor objects. Therefore,\n options protos in descriptor objects (e.g. returned by Descriptor::options(),\n or produced by Descriptor::CopyTo()) will never have UninterpretedOptions\n in them.\n"
    }
    location {
      path: 4
      path: 18
      path: 1
      span: 702
      span: 8
      span: 27
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      span: 708
      span: 2
      span: 711
      span: 3
      leading_comments: " The name of the uninterpreted option.  Each string represents a segment in\n a dot-separated name.  is_extension is true iff a segment represents an\n extension (denoted with parentheses in options specs in .proto files).\n E.g.,{ [\"foo\", false], [\"bar.baz\", true], [\"qux\", false] } represents\n \"foo.(bar.baz).qux\".\n"
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 1
      span: 708
      span: 10
      span: 18
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 0
      span: 709
      span: 4
      span: 34
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 0
      path: 4
      span: 709
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 0
      path: 5
      span: 709
      span: 13
      span: 19
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 0
      path: 1
      span: 709
      span: 20
      span: 29
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 0
      path: 3
      span: 709
      span: 32
      span: 33
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 1
      span: 710
      span: 4
      span: 35
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 1
      path: 4
      span: 710
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 1
      path: 5
      span: 710
      span: 13
      span: 17
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 1
      path: 1
      span: 710
      span: 18
      span: 30
    }
    location {
      path: 4
      path: 18
      path: 3
      path: 0
      path: 2
      path: 1
      path: 3
      span: 710
      span: 33
      span: 34
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 0
      span: 712
      span: 2
      span: 29
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 0
      path: 4
      span: 712
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 0
      path: 6
      span: 712
      span: 11
      span: 19
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 0
      path: 1
      span: 712
      span: 20
      span: 24
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 0
      path: 3
      span: 712
      span: 27
      span: 28
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 1
      span: 716
      span: 2
      span: 39
      leading_comments: " The value of the uninterpreted option, in whatever type the tokenizer\n identified it as during parsing. Exactly one of these should be set.\n"
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 1
      path: 4
      span: 716
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 1
      path: 5
      span: 716
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 1
      path: 1
      span: 716
      span: 18
      span: 34
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 1
      path: 3
      span: 716
      span: 37
      span: 38
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 2
      span: 717
      span: 2
      span: 41
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 2
      path: 4
      span: 717
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 2
      path: 5
      span: 717
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 2
      path: 1
      span: 717
      span: 18
      span: 36
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 2
      path: 3
      span: 717
      span: 39
      span: 40
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 3
      span: 718
      span: 2
      span: 40
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 3
      path: 4
      span: 718
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 3
      path: 5
      span: 718
      span: 11
      span: 16
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 3
      path: 1
      span: 718
      span: 17
      span: 35
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 3
      path: 3
      span: 718
      span: 38
      span: 39
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 4
      span: 719
      span: 2
      span: 35
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 4
      path: 4
      span: 719
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 4
      path: 5
      span: 719
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 4
      path: 1
      span: 719
      span: 18
      span: 30
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 4
      path: 3
      span: 719
      span: 33
      span: 34
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 5
      span: 720
      span: 2
      span: 34
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 5
      path: 4
      span: 720
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 5
      path: 5
      span: 720
      span: 11
      span: 16
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 5
      path: 1
      span: 720
      span: 17
      span: 29
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 5
      path: 3
      span: 720
      span: 32
      span: 33
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 6
      span: 721
      span: 2
      span: 38
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 6
      path: 4
      span: 721
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 6
      path: 5
      span: 721
      span: 11
      span: 17
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 6
      path: 1
      span: 721
      span: 18
      span: 33
    }
    location {
      path: 4
      path: 18
      path: 2
      path: 6
      path: 3
      span: 721
      span: 36
      span: 37
    }
    location {
      path: 4
      path: 19
      span: 729
      span: 0
      span: 858
      span: 1
      leading_comments: " Encapsulates information about the original source file from which a\n FileDescriptorProto was generated.\n"
      leading_detached_comments: " ===================================================================\n Optional source code info\n"
    }
    location {
      path: 4
      path: 19
      path: 1
      span: 729
      span: 8
      span: 22
    }
    location {
      path: 4
      path: 19
      path: 2
      path: 0
      span: 773
      span: 2
      span: 33
      leading_comments: " A Location identifies a piece of source code in a .proto file which\n corresponds to a particular definition.  This information is intended\n to be useful to IDEs, code indexers, documentation generators, and similar\n tools.\n\n For example, say we have a file like:\n   message Foo {\n     optional string foo = 1;\n   }\n Let\'s look at just the field definition:\n   optional string foo = 1;\n   ^       ^^     ^^  ^  ^^^\n   a       bc     de  f  ghi\n We have the following locations:\n   span   path               represents\n   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.\n   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).\n   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).\n   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).\n   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).\n\n Notes:\n - A location may refer to a repeated field itself (i.e. not to any\n   particular index within it).  This is used whenever a set of elements are\n   logically enclosed in a single code segment.  For example, an entire\n   extend block (possibly containing multiple extension definitions) will\n   have an outer location whose path refers to the \"extensions\" repeated\n   field without an index.\n - Multiple locations may have the same path.  This happens when a single\n   logical declaration is spread out across multiple places.  The most\n   obvious example is the \"extend\" block again -- there may be multiple\n   extend blocks in the same scope, each of which will have the same path.\n - A location\'s span is not always a subset of its parent\'s span.  For\n   example, the \"extendee\" of an extension declaration appears at the\n   beginning of the \"extend\" block and is shared by all extensions within\n   the block.\n - Just because a location\'s span is a subset of some other location\'s span\n   does not mean that it is a descendant.  For example, a \"group\" defines\n   both a type and a field in a single declaration.  Thus, the locations\n   corresponding to the type and field and their components will overlap.\n - Code which tries to interpret locations should probably be designed to\n   ignore those that it doesn\'t understand, as more types of locations could\n   be recorded in the future.\n"
    }
    location {
      path: 4
      path: 19
      path: 2
      path: 0
      path: 4
      span: 773
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 19
      path: 2
      path: 0
      path: 6
      span: 773
      span: 11
      span: 19
    }
    location {
      path: 4
      path: 19
      path: 2
      path: 0
      path: 1
      span: 773
      span: 20
      span: 28
    }
    location {
      path: 4
      path: 19
      path: 2
      path: 0
      path: 3
      span: 773
      span: 31
      span: 32
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      span: 774
      span: 2
      span: 857
      span: 3
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 1
      span: 774
      span: 10
      span: 18
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 0
      span: 798
      span: 4
      span: 44
      leading_comments: " Identifies which part of the FileDescriptorProto was defined at this\n location.\n\n Each element is a field number or an index.  They form a path from\n the root FileDescriptorProto to the place where the definition.  For\n example, this path:\n   [ 4, 3, 2, 7, 1 ]\n refers to:\n   file.message_type(3)  // 4, 3\n       .field(7)         // 2, 7\n       .name()           // 1\n This is because FileDescriptorProto.message_type has field number 4:\n   repeated DescriptorProto message_type = 4;\n and DescriptorProto.field has field number 2:\n   repeated FieldDescriptorProto field = 2;\n and FieldDescriptorProto.name has field number 1:\n   optional string name = 1;\n\n Thus, the above path gives the location of a field name.  If we removed\n the last element:\n   [ 4, 3, 2, 7 ]\n this path refers to the whole field declaration (from the beginning\n of the label to the terminating semicolon).\n"
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 0
      path: 4
      span: 798
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 0
      path: 5
      span: 798
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 0
      path: 1
      span: 798
      span: 19
      span: 23
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 0
      path: 3
      span: 798
      span: 26
      span: 27
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 0
      path: 8
      span: 798
      span: 28
      span: 43
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 0
      path: 8
      path: 2
      span: 798
      span: 29
      span: 42
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 1
      span: 805
      span: 4
      span: 44
      leading_comments: " Always has exactly three or four elements: start line, start column,\n end line (optional, otherwise assumed same as start line), end column.\n These are packed into a single field for efficiency.  Note that line\n and column numbers are zero-based -- typically you will want to add\n 1 to each before displaying to a user.\n"
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 1
      path: 4
      span: 805
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 1
      path: 5
      span: 805
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 1
      path: 1
      span: 805
      span: 19
      span: 23
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 1
      path: 3
      span: 805
      span: 26
      span: 27
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 1
      path: 8
      span: 805
      span: 28
      span: 43
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 1
      path: 8
      path: 2
      span: 805
      span: 29
      span: 42
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 2
      span: 854
      span: 4
      span: 41
      leading_comments: " If this SourceCodeInfo represents a complete declaration, these are any\n comments appearing before and after the declaration which appear to be\n attached to the declaration.\n\n A series of line comments appearing on consecutive lines, with no other\n tokens appearing on those lines, will be treated as a single comment.\n\n leading_detached_comments will keep paragraphs of comments that appear\n before (but not connected to) the current element. Each paragraph,\n separated by empty lines, will be one comment element in the repeated\n field.\n\n Only the comment content is provided; comment markers (e.g. //) are\n stripped out.  For block comments, leading whitespace and an asterisk\n will be stripped from the beginning of each line other than the first.\n Newlines are included in the output.\n\n Examples:\n\n   optional int32 foo = 1;  // Comment attached to foo.\n   // Comment attached to bar.\n   optional int32 bar = 2;\n\n   optional string baz = 3;\n   // Comment attached to baz.\n   // Another line attached to baz.\n\n   // Comment attached to qux.\n   //\n   // Another line attached to qux.\n   optional double qux = 4;\n\n   // Detached comment for corge. This is not leading or trailing comments\n   // to qux or corge because there are blank lines separating it from\n   // both.\n\n   // Detached comment for corge paragraph 2.\n\n   optional string corge = 5;\n   /* Block comment attached\n    * to corge.  Leading asterisks\n    * will be removed. */\n   /* Block comment attached to\n    * grault. */\n   optional int32 grault = 6;\n\n   // ignored detached comments.\n"
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 2
      path: 4
      span: 854
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 2
      path: 5
      span: 854
      span: 13
      span: 19
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 2
      path: 1
      span: 854
      span: 20
      span: 36
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 2
      path: 3
      span: 854
      span: 39
      span: 40
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 3
      span: 855
      span: 4
      span: 42
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 3
      path: 4
      span: 855
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 3
      path: 5
      span: 855
      span: 13
      span: 19
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 3
      path: 1
      span: 855
      span: 20
      span: 37
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 3
      path: 3
      span: 855
      span: 40
      span: 41
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 4
      span: 856
      span: 4
      span: 50
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 4
      path: 4
      span: 856
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 4
      path: 5
      span: 856
      span: 13
      span: 19
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 4
      path: 1
      span: 856
      span: 20
      span: 45
    }
    location {
      path: 4
      path: 19
      path: 3
      path: 0
      path: 2
      path: 4
      path: 3
      span: 856
      span: 48
      span: 49
    }
    location {
      path: 4
      path: 20
      span: 863
      span: 0
      span: 884
      span: 1
      leading_comments: " Describes the relationship between generated code and its original source\n file. A GeneratedCodeInfo message is associated with only one generated\n source file, but may contain references to different source .proto files.\n"
    }
    location {
      path: 4
      path: 20
      path: 1
      span: 863
      span: 8
      span: 25
    }
    location {
      path: 4
      path: 20
      path: 2
      path: 0
      span: 866
      span: 2
      span: 37
      leading_comments: " An Annotation connects some span of text in generated code to an element\n of its generating .proto file.\n"
    }
    location {
      path: 4
      path: 20
      path: 2
      path: 0
      path: 4
      span: 866
      span: 2
      span: 10
    }
    location {
      path: 4
      path: 20
      path: 2
      path: 0
      path: 6
      span: 866
      span: 11
      span: 21
    }
    location {
      path: 4
      path: 20
      path: 2
      path: 0
      path: 1
      span: 866
      span: 22
      span: 32
    }
    location {
      path: 4
      path: 20
      path: 2
      path: 0
      path: 3
      span: 866
      span: 35
      span: 36
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      span: 867
      span: 2
      span: 883
      span: 3
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 1
      span: 867
      span: 10
      span: 20
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 0
      span: 870
      span: 4
      span: 44
      leading_comments: " Identifies the element in the original source .proto file. This field\n is formatted the same as SourceCodeInfo.Location.path.\n"
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 0
      path: 4
      span: 870
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 0
      path: 5
      span: 870
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 0
      path: 1
      span: 870
      span: 19
      span: 23
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 0
      path: 3
      span: 870
      span: 26
      span: 27
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 0
      path: 8
      span: 870
      span: 28
      span: 43
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 0
      path: 8
      path: 2
      span: 870
      span: 29
      span: 42
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 1
      span: 873
      span: 4
      span: 36
      leading_comments: " Identifies the filesystem path to the original source .proto.\n"
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 1
      path: 4
      span: 873
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 1
      path: 5
      span: 873
      span: 13
      span: 19
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 1
      path: 1
      span: 873
      span: 20
      span: 31
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 1
      path: 3
      span: 873
      span: 34
      span: 35
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 2
      span: 877
      span: 4
      span: 29
      leading_comments: " Identifies the starting offset in bytes in the generated code\n that relates to the identified object.\n"
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 2
      path: 4
      span: 877
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 2
      path: 5
      span: 877
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 2
      path: 1
      span: 877
      span: 19
      span: 24
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 2
      path: 3
      span: 877
      span: 27
      span: 28
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 3
      span: 882
      span: 4
      span: 27
      leading_comments: " Identifies the ending offset in bytes in the generated code that\n relates to the identified offset. The end offset should be one past\n the last relevant byte (so the length of the text = end - begin).\n"
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 3
      path: 4
      span: 882
      span: 4
      span: 12
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 3
      path: 5
      span: 882
      span: 13
      span: 18
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 3
      path: 1
      span: 882
      span: 19
      span: 22
    }
    location {
      path: 4
      path: 20
      path: 3
      path: 0
      path: 2
      path: 3
      path: 3
      span: 882
      span: 25
      span: 26
    }
  }
}
file {
  name: "handle.proto"
  package: "oak.handle"
  dependency: "google/protobuf/descriptor.proto"
  message_type {
    name: "Handle"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_FIXED64
      json_name: "id"
    }
  }
  extension {
    name: "handle_type"
    extendee: ".google.protobuf.FieldOptions"
    number: 79658
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "handleType"
  }
  source_code_info {
    location {
      span: 0
      span: 0
      span: 12
      span: 1
    }
    location {
      path: 12
      span: 0
      span: 0
      span: 18
    }
    location {
      path: 2
      span: 2
      span: 0
      span: 19
    }
    location {
      path: 3
      path: 0
      span: 4
      span: 0
      span: 42
    }
    location {
      path: 7
      span: 6
      span: 0
      span: 8
      span: 1
    }
    location {
      path: 7
      path: 0
      span: 7
      span: 2
      span: 29
    }
    location {
      path: 7
      path: 0
      path: 2
      span: 6
      span: 7
      span: 35
    }
    location {
      path: 7
      path: 0
      path: 5
      span: 7
      span: 2
      span: 8
    }
    location {
      path: 7
      path: 0
      path: 1
      span: 7
      span: 9
      span: 20
    }
    location {
      path: 7
      path: 0
      path: 3
      span: 7
      span: 23
      span: 28
    }
    location {
      path: 4
      path: 0
      span: 10
      span: 0
      span: 12
      span: 1
    }
    location {
      path: 4
      path: 0
      path: 1
      span: 10
      span: 8
      span: 14
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      span: 11
      span: 4
      span: 19
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 5
      span: 11
      span: 4
      span: 11
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 1
      span: 11
      span: 12
      span: 14
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 3
      span: 11
      span: 17
      span: 18
    }
  }
  syntax: "proto3"
}
file {
  name: "test_message.proto"
  package: "handle_extract"
  dependency: "handle.proto"
  message_type {
    name: "TestMessage"
    field {
      name: "content"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "content"
    }
    field {
      name: "handle"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".oak.handle.Handle"
      options {
        deprecated: true
        [oak.handle.handle_type]: "usize"
      }
      json_name: "handle"
    }
  }
  source_code_info {
    location {
      span: 0
      span: 0
      span: 9
      span: 1
    }
    location {
      path: 12
      span: 0
      span: 0
      span: 18
    }
    location {
      path: 2
      span: 2
      span: 0
      span: 23
    }
    location {
      path: 3
      path: 0
      span: 4
      span: 0
      span: 22
    }
    location {
      path: 4
      path: 0
      span: 6
      span: 0
      span: 9
      span: 1
    }
    location {
      path: 4
      path: 0
      path: 1
      span: 6
      span: 8
      span: 19
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      span: 7
      span: 4
      span: 23
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 5
      span: 7
      span: 4
      span: 10
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 1
      span: 7
      span: 11
      span: 18
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 0
      path: 3
      span: 7
      span: 21
      span: 22
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      span: 8
      span: 4
      span: 89
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 6
      span: 8
      span: 4
      span: 21
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 1
      span: 8
      span: 22
      span: 28
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 3
      span: 8
      span: 31
      span: 32
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 8
      span: 8
      span: 33
      span: 88
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 8
      path: 79658
      span: 8
      span: 34
      span: 68
    }
    location {
      path: 4
      path: 0
      path: 2
      path: 1
      path: 8
      path: 3
      span: 8
      span: 70
      span: 87
    }
  }
  syntax: "proto3"
}
